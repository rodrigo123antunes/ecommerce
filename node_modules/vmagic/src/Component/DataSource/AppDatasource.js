'use strict';
const MySQL = require('./MySQL');
const Couchbase = require('./Couchbase');
const PgSQL = require('./PgSQL');

class AppDatasource {

    constructor(dbConfig, mode) {
        if (mode && mode === 'test') {
            this.dbConfig = dbConfig.test;
        } else {
            this.dbConfig = dbConfig.default;
        }
        this.initDriver();
    }

    initDriver() {
        if (this.dbConfig.dataSource === 'Couchbase') {
            this.couchbase = new Couchbase();
        } else if (this.dbConfig.dataSource === 'MySQL') {
            this.mysql = new MySQL(this.dbConfig);
            this.mysql.createPool();
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            this.pgsql = new PgSQL(this.dbConfig);
            this.pgsql.createPool();
        }
    }

    delete(table, conditions, connection = null) {
        if (this.dbConfig.dataSource === 'Couchbase') {
            return this.couchbase.delete(conditions);
        } else if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql.delete(table, conditions, connection);
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql.delete(table, conditions, connection);
        }

        return null;
    }

    save(table, data, connection = null) {
        if (this.dbConfig.dataSource === 'Couchbase') {
            return this.couchbase.save(data);
        } else if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql.save(table, data, connection);
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql.save(table, data, connection);
        }

        return null;
    }

    saveMany(table, data, connection = null) {
        if (this.dbConfig.dataSource === 'Couchbase') {
            return this.couchbase.saveMany(data);
        } else if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql.saveMany(table, data, connection);
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql.saveMany(table, data, connection);
        }

        return null;
    }

    update(table, data, conditions, connection = null) {
        if (this.dbConfig.dataSource === 'Couchbase') {
            return this.couchbase.update(data);
        } else if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql.update(table, data, conditions, connection);
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql.update(table, data, conditions, connection);
        }

        return null;
    }

    findBy(table, data, params, connection = null) {
        if (this.dbConfig.dataSource === 'Couchbase') {
            return this.couchbase.findBy(table, data);
        } else if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql.findBy(table, data, params, connection);
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql.findBy(table, data, params, connection);
        }

        return null;
    }

    findAll(table, params, connection = null) {
        if (this.dbConfig.dataSource === 'Couchbase') {
            return null;
        } else if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql.findAll(table, params, connection);
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql.findAll(table, params, connection);
        }

        return null;
    }

    find(table, type, params, connection = null) {
        if (this.dbConfig.dataSource === 'Couchbase') {
            return null;
        } else if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql.find(table, type, params, connection);
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql.find(table, type, params, connection);
        }

        return null;
    }

    showSQL() {
        if (this.dbConfig.dataSource === 'MySQL') {
            this.mysql.showSQL();
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            this.pgsql.showSQL();
        }
    }

    getDatasource() {
        if (this.dbConfig.dataSource === 'MySQL') {
            return this.mysql;
        } else if (this.dbConfig.dataSource === 'PgSQL') {
            return this.pgsql;
        }

        return null;
    }
}

module.exports = AppDatasource;
