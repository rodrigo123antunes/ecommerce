/*eslint no-console: ["error",  { allow: ["log"] }] */
'use strict';

var chalk = require('chalk');

class Logger {

    warn(message) {
        this.message = message;
        if (this.message instanceof Object && Object.keys(this.message).length > 0) {
            console.log(`${chalk.green(new Date())} - ${chalk.yellow(JSON.stringify(this.message, null, 4))}`);
        } else {
            console.log(`${chalk.green(new Date())} - ${chalk.yellow(this.message)}`);
        }
    }

    error(message) {
        this.message = message;
        if (this.message instanceof Object && Object.keys(this.message).length > 0) {
            console.log(`${chalk.green(new Date())} - ${chalk.red(JSON.stringify(this.message, null, 4))}`);
        } else {
            console.log(`${chalk.green(new Date())} - ${chalk.red(this.message)}`);
        }
    }

    success(message) {
        this.message = message;
        if (this.message instanceof Object && Object.keys(this.message).length > 0) {
            console.log(`${chalk.green(new Date())} - ${chalk.green(JSON.stringify(this.message, null, 4))}`);
        } else {
            console.log(`${chalk.green(new Date())} - ${chalk.green(this.message)}`);
        }
    }

    info(message) {
        this.message = message;
        if (this.message instanceof Object && Object.keys(this.message).length > 0) {
            console.log(`${chalk.green(new Date())} - ${chalk.cyan(JSON.stringify(this.message, null, 4))}`);
        } else {
            console.log(`${chalk.green(new Date())} - ${chalk.cyan(this.message)}`);
        }
    }
}

module.exports = Logger;
