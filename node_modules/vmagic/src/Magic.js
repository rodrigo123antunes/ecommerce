/*eslint no-console: ["error", { allow: ["log"] }] */
'use strict';

const https = require("https");
const http = require("http");
const path = require("path");
const fs = require("fs");
const RequestHandler = require('./Component/RequestHandler');

class Magic {

    constructor() {
        const srcPath = path.resolve(path.join('src'));
        this.application = {
            "componentPath" : path.resolve(path.join(srcPath, 'Component')),
            "configPath": path.resolve(path.join(srcPath, 'Config')),
            "controllersPath": path.resolve(path.join(srcPath, 'Controller')),
            "modelPath": path.resolve(path.join(srcPath, 'Model'))
        };
    }

    start(address, port) {
        const requestHandler = new RequestHandler(this.application);
        http.createServer(function (request, response) {
            requestHandler.process(request, response);
        }).listen(port, address);
        console.log(`Server running at http://${address}:${port}/`);
    }

    startHttps(address, port, keyPath, certPath) {
        const options = {
            "key": fs.readFileSync(keyPath),
            "cert": fs.readFileSync(certPath)
        };
        const requestHandler = new RequestHandler(this.application);
        https.createServer(options, function (request, response) {
            requestHandler.process(request, response);
        }).listen(port, address);
        console.log(`Server running at https://${address}:${port}/`);
    }

    getApplication() {
        return this.application;
    }
}

module.exports = Magic;
